# Makefile.in
# Input for ./configure.
# Generates Makefile

# Build Flags

CC = @CC@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXLD = $(CXX)
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@ -O3 -Wall -Wextra -fPIC
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
MKDIR_P = @MKDIR_P@

# Targets

all: threes_ai threes_cpp

# C++ Package
threes_cpp: bin/threes@EXEEXT@ 

# Python package
threes_ai: bin/threes.so
	pip install .

# Language Targets

# C++ Binaries
bin/%@EXEEXT@: bin/%.@OBJEXT@
	$(CXXLD) $(CXXFLAGS) $(LDFLAGS) $^ $(LDLIBS) -o $@

# C++ Shared Object files
bin/%.so: bin/%.@OBJEXT@
	$(CXXLD) $(CXXFLAGS) -shared $(LDFLAGS) $^ $(LDLIBS) -o $@

# C++ Object files
bin/%.@OBJEXT@ : threes_cpp/%.cpp
	$(MKDIR_P) bin
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c -o $@ $<

# Utility Targets

test:
	pytest

clean:
	# C++ build files
	$(RM) -vr bin/

	# Python build files
	$(RM) -vr **/__pycache__
	$(RM) -vr .pytest_cache
	$(RM) -vr src/*.egg-info
	$(RM) -vr build/ 
	
	# Autoconf files
	$(RM) -v **~
	$(RM) -vr autom4te.cache/
	$(RM) -v aclocal.m4 configure install-sh
	$(RM) -v **/config.h **/config.h.in

	# Configure files
	$(RM) -v config.log config.status

.PHONY: all clean test threes_ai threes_cpp  
